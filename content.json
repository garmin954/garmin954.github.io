{"pages":[],"posts":[{"title":"HEXO+ICARUS主题配置安装","text":"1 前言曾经折腾过Hexo+Next主题，但是很长时间都没有文章产出，因为习惯了使用印象笔记记录东西，现在想着换个主题，重新开始。 2 安装Git和Node.JS 2.1下载Git和Node.jsGit： https://git-scm.com/download/win/Node.js：https://nodejs.org/zh-cn/download/ 安装全部默认设置，一路Next即可。 3 安装Hexo 3.1下载Hexo创建好一个文件夹（不要在桌面），右键点击Git Bash Here,输入以下命令npm install -g hexo-cli 这个过程没有提示反馈，等待即可，大约1-2分钟即可，如果太久没有反应，【Ctrl+C】停止下载，可以将npm的源更改为淘宝镜像，输入以下命令，再尝试下载Hexo 12npm config set registry &quot;https://registry.npm.taobao.org/&quot;npm config set electron_mirror &quot;https://npm.taobao.org/mirrors/electron/&quot; 下载完成后初始化Hexohexo init完成后在初始化的路径下会有如下文件夹，后面标注对应作用 3.2运行Hexo使用以下命令生成博客并启动本地浏览 12hexo ghexo s 打开 http://localhost:4000 浏览，注意复制链接时不要使用【Ctrl+C】，因为这会停止本地浏览服务 3.3配置Hexo打开_config.yml，一般需要配置以下参数 123456789101112131415title: #网站标题author: #作者language: #语言（英语en，中文zh-CN）url: #网站url（域名）permalink: #文章链接（例article/:urlname.html）# Extensionstheme: #主题# Deploymentdeploy: type: repo: #仓库SSH地址 branch: permalink设置尽量短一些不含中文，并且可以设置一个urlname参数加html后缀，方便以后在文章头部设置该属性，实现自定义文章的url 3.4下载主题这里使用的icarus主题https://github.com/ppoffice/hexo-theme-icarus根据说明页，使用命令下载 git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus或直接下载ZIP包 将下载的文件解压，复制到/theme/中,主题文件夹过长可以重命名为icarus，然后修改Hexo配置文件_config.yml中的themes参数 theme: icarus #主题重新使用命令即可本地预览效果 12hexo ghexo s 其他主题可以在GitHub上搜索hexo-theme https://github.com/search?q=hexo-theme 4 配置GitHub 4.1创建仓库登录GitHub账号后，打开 https://github.com/new页面创建仓库，参数默认即可，`注意仓库名称一定要符合 用户名.github.io 的格式 4.2创建SSH key输入命令（注意有引号），敲三下回车即可 ssh-keygen -t rsa -C &quot;邮箱地址&quot;之后在电脑用户目录如 C:\\Users\\Millet.ssh下生成了id_rsa和id_rsa.pub两个文件将id_rsa.pub文件中的内容复制，打开GitHub个人设置 SSH and GPG keys，点击New SSH key，粘贴到Key里面，标题随便取 输入命令，绑定GitHub账户 123456789git config --global user.email &quot;邮箱地址&quot;git config --global user.name &quot;用户名&quot; 测试连接ssh -T git@github.comyes 提示 You’ve successfully authenticated ，表明已经成功连接 4.3部署Hexo到GitHub安装部署插件npm install hexo-deployer-git --save修改Hexo配置文件_config.yml 123456789deploy: type: git repo: git@github.com:用户名/用户名.github.io.git #仓库SSH地址 branch: master 开始部署hexo ghexo d 等待一会，打开 https://用户名.github.io 即可看到效果 4.4绑定域名 1.在自己域名管理面板中添加CNAME记录，主机头为：www，值为：用户名.github.io2.在Hexo的\\source\\目录下创建一个CNAME.txt,输入你的域名，然后将txt后缀删除3.使用hexo g及hexo d部署到GitHub4.在GitHub仓库设置中,输入域名，开启SSL证书(注意必须要二级域名才能开启，不带主机头顶级域名无法开启) 5 主题配置 5.1主题参数配置导航栏显示及个人信息控件修改打开/themes/icarus/_config.yml，修改以下参数 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576navbar: # Navigation bar menu links menu: #菜单显示改为中文 首页: / 归档: /archives/ 分类: /categories/ 标签: /tags/ 关于: /about/ widgets: - # Widget name type: profile position: left #放置在左边栏 author: #作者 author_title: #作者标题 location: #位置信息 article: #文章显示 # Code highlight settings highlight: # 代码高亮主题 # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # 显示复制按钮 clipboard: true # 代码是否默认折叠. Can be &quot;folded&quot;, &quot;unfolded&quot; fold: unfolded # 文章预览图 thumbnail: true # 阅读时间显示 readtime: true 文章显示修改article: #文章显示 # Code highlight settings highlight: # 代码高亮主题 # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # 显示复制按钮 clipboard: true # 代码是否默认折叠. Can be &quot;folded&quot;, &quot;unfolded&quot; fold: unfolded # 文章预览图 thumbnail: true # 阅读时间显示 readtime: true 控件位置修改配置文件中的控件代码先后顺序决定了网页中两栏控件的先后顺序 - # Widget name type: toc position: left #控件的位置 -删除控件如果需要去掉某个控件，那么可以在控件代码前加#，注意分割的符号 - 也要注释当然也可以直接删除代码# -# # Widget name# type: category# # Where should the widget be placed, left or right# position: left控件固定修改以下false为true可以让控件不随滚动条滚动sidebar: # left sidebar settings left: #左边栏固定 sticky: false # right sidebar settings right: #右边栏固定 sticky: false 5.2主题美化icarus这款主题为全局三栏显示，这样浏览文章时显得过于拥挤（宽屏显示器跳过），所以搜索了一下，如何让文章页拓宽一点，少显示些控件，最后找到了下面这篇帖子 Icarus 主题自定义 https://www.alphalxy.com/2019/03/customize-icarus/ 按照文章中的步骤配置即可，但是我测试后发现PC端成功改成了两栏，移动端布局错乱了，后面还是用了这位大佬的现成配置文件,感谢大佬分享。 现成配置文件 https://github.com/AlphaLxy/hexo-theme-icarus 使用方法：下载ZIP包，解压到Hexo的theme文件即可，按照上文的方法修改为自己的参数 底部访问量及运行时间修改 修改\\themes\\icarus\\layout\\common\\footer.ejs 文件，将原来只显示人数的span标签删除，添加以下代码 1234567891011121314151617181920 &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 来访 &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人&lt;/span&gt; &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;, 总访问 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt; &lt;script&gt; var now = new Date(); function createtime() { var grt= new Date(&quot;02/20/2020 00:00:00&quot;); /*建站时间*/ now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = &quot;0&quot; + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = &quot;0&quot; + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = &quot;0&quot; + snum;} document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; } setInterval(&quot;createtime()&quot;,250); &lt;/script&gt; 再修改icarus配置文件，打开busuanzi统计 busuanzi: true 5.3插件暂时未使用太多插件，觉得博客简洁点好，不能花里胡哨，有空再弄吧 ╮(￣▽￣)╭ 5.4评论及分享参考icarus官方文章https://blog.zhangruipeng.me/hexo-theme-icarus/categories/Plugins/Comment/https://blog.zhangruipeng.me/hexo-theme-icarus/categories/Plugins/Share/ 6 常见问题修改配置或文章后浏览或部署到GitHub却未改变：1.尝试清理浏览器缓存2.使用hexo clean，删除生成的缓存，再重新hexo g3.删除部署到GitHub的缓存文件夹.deploy_git，重新生成及部署 7文章格式文章头部 1234567891011title: date: urlname: #自定义文章URLcategories: tags: - 标签thumbnail: #文章预览图comments: true #评论系统toc: true #目录mathjax: true #公式渲染 可以将文章头部保存到\\scaffolds\\post.md模板中，下次使用hexo n生成文章自带头部thumbnail参数可以填网址，也可以自己在\\source\\下创建一个images文件夹，将图片01.jpg放入，之后将thumbnail设置为/images/01.jpg即可调用————————————————「一粒米:D」的原创文章原文链接：https://blog.csdn.net/milletloks/java/article/details/104445557","link":"/2017/05/26/HEXO+ICARUS%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/"},{"title":"学习写作","text":"一，为什么要学习写作 记录工作生活的问题解决方法和经验总结 提升自己的语言构思能力和逻辑能力 二，怎么写作 一篇技术文章，除了刚我们说的这种结构体，还有开篇、总结、呼吁行动等环节。综合起来，常见的技术文章组织结构如下： 开篇，这部分阐明文章讲什么、能带给读者什么价值； 结构体，按照一定的结构，展开叙述，比如时间线、比如走读代码的逻辑、比如设计演示示例的过程（问题-设计思路-代码演示-代码解读-结果展示）、比如QA（问题-答案）、比如并列条目、比如总分总、比如实战小项目的讲解过程（项目背景-效果展示-设计解释-代码演示-代码解读-延伸场景）等； 总结，一段话，回顾讲过的要点，点出读者应该注意的地方； 呼吁行动，可以一两句话，呼吁读者自己设计代码、动手试试，或者给出一些练习题，让读者去做。 2.1 开篇 文章的开头部分，往往决定着读者是否愿意继续看下去，因此切入点要足够精准，足够切题，且足够有吸引力。 这部分阐明文章讲什么、能带给读者什么价值； 2.2 结构体 各个部分也需要串成串，那就需要我们加入一定的呼应。我们的文章可以分成多个部分，但所有部分务必应该为题目，也就是主题服务。因此在各部分之间，就需要出现必要的呼应， 2.3 总结 一段话，回顾讲过的要点，点出读者应该注意的地方；","link":"/2020/04/16/articles/%E5%AD%A6%E4%B9%A0%E5%86%99%E4%BD%9C/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/04/16/web/hello-world/"},{"title":"vuex状态管理基础详情","text":"一，Vuex 状态状态管理1.1 什么是 vuex 状态状态管理 Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能 1.2 为什么要使用vuex 解决了什么难题 二，Vuex基础三，怎么使用Vuex四，注意事项","link":"/2020/04/16/web/vue/vuex%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E6%B7%B1%E5%85%A5/"},{"title":"小程序登录流程","text":"先放一张小程序官方登录流程时序压压惊 第一步： 前端 wx.login 获取code 第二步： 前端 通过button按钮获取 iv 和 encryptedData 123&lt;button open-type=&quot;getUserInfo&quot; bindgetuserinfo=&quot;bindGetUserInfo&quot; lang=&quot;zh_CN&quot; type=&quot;primary&quot;&gt; 授权登录&lt;/button&gt; 第三步：前端 wx.request 携带 code, iv, encryptedData 请求接口，服务器端 拿去code 请求微信接口 换取 openid ,session_key 第四步：服务端 查看数据库是否存在用户，不存在时用session_key进行解密（得到用户信息），存在时直接执行第五步 第五步：服务端生产token返回给前端 第六步：前端处理token和登录状态 我的简约思维导图 前端登录状态及token存储More info: Writing","link":"/2020/04/16/web/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/"}],"tags":[{"name":"jQuery","slug":"jQuery","link":"/tags/jQuery/"},{"name":"表格","slug":"表格","link":"/tags/%E8%A1%A8%E6%A0%BC/"},{"name":"表单验证","slug":"表单验证","link":"/tags/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"},{"name":"vuex","slug":"vuex","link":"/tags/vuex/"},{"name":"状态管理","slug":"状态管理","link":"/tags/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/"},{"name":"登录","slug":"登录","link":"/tags/%E7%99%BB%E5%BD%95/"},{"name":"小程序","slug":"小程序","link":"/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"}],"categories":[{"name":"web前端","slug":"web前端","link":"/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"articles","slug":"articles","link":"/categories/articles/"},{"name":"vue","slug":"vue","link":"/categories/vue/"},{"name":"小程序","slug":"小程序","link":"/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"}]}